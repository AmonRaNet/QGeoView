name: Build

on:
  push:
    paths:
      - 'lib/**'
      - 'samples/**'
      - '.github/workflows/build*'
  pull_request:
    paths:
      - 'lib/**'
      - 'samples/**'
      - '.github/workflows/build*'
  workflow_call:

env:
  # Customize the build type here (Release, Debug)
  BUILD_TYPE: Release

jobs:
  ubuntu:
    runs-on: ubuntu-${{ matrix.ubuntu_version }}
    name: Ubuntu-${{ matrix.ubuntu_version }}-Qt-${{ matrix.qt_version }}-${{ matrix.build }}
    strategy:
      fail-fast: false
      matrix:
        ubuntu_version: [20.04, 22.04]
        qt_version: [5.12.12, 5.15.2, 6.4.0]
        build: [cmake+qmake]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
          version: ${{ matrix.qt_version }}
          cache: 'true'
          cache-key-prefix: ${{ runner.os }}-Qt-Cache-${{ matrix.qt_version }}
          dir: ${{ github.workspace }}/Qt

    - name: CMake build
      if: contains(matrix.build, 'cmake')
      run: |
         cmake -DBUILD_SHARED_LIBS=ON -B "${{github.workspace}}/cmake-build"
         cmake --build ${{github.workspace}}/cmake-build --config ${{env.BUILD_TYPE}}

    - name: qmake build
      if: contains(matrix.build, 'qmake')
      run: |
         mkdir "${{github.workspace}}/qmake-build"
         cd "${{github.workspace}}/qmake-build"
         qmake .. CONFIG+=${{env.BUILD_TYPE}}
         make

  MSVC:
    runs-on: windows-${{ matrix.win_version }}
    name: windows-${{ matrix.win_version }}-Qt-${{ matrix.qt_version }}-${{ matrix.build }}
    strategy:
      fail-fast: false
      matrix:
        win_version: [2019, 2022]
        qt_version: [5.12.12, 5.15.2, 6.4.0]
        build: [cmake+qmake]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
            version: ${{ matrix.qt_version }}
            cache: 'true'
            cache-key-prefix: ${{ runner.os }}-Qt-Cache-${{ matrix.qt_version }}
            dir: ${{ github.workspace }}/Qt

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: CMake build
        if: contains(matrix.build, 'cmake')
        run: |
           cmake -DBUILD_SHARED_LIBS=ON -B "${{github.workspace}}/cmake-build"
           cmake --build ${{github.workspace}}/cmake-build --config ${{env.BUILD_TYPE}}

      - name: qmake build
        if: contains(matrix.build, 'qmake')
        run: |
           mkdir "${{github.workspace}}/qmake-build"
           cd "${{github.workspace}}/qmake-build"
           qmake .. CONFIG+=${{env.BUILD_TYPE}}
           nmake

  macos:
    runs-on: macos-${{ matrix.macos_version }}
    name: macos-${{ matrix.macos_version }}-Qt-${{ matrix.qt_version }}-${{ matrix.build }}
    strategy:
      fail-fast: false
      matrix:
        macos_version: [11, 12]
        qt_version: [5.15.2, 6.4.0]
        build: [cmake+qmake]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
            version: ${{ matrix.qt_version }}
            cache: 'true'
            cache-key-prefix: ${{ runner.os }}-Qt-Cache-${{ matrix.qt_version }}
            dir: ${{ github.workspace }}/Qt

      - name: CMake build
        if: contains(matrix.build, 'cmake')
        run: |
           cmake -DBUILD_SHARED_LIBS=ON -B "${{github.workspace}}/cmake-build"
           cmake --build ${{github.workspace}}/cmake-build --config ${{env.BUILD_TYPE}}

      - name: qmake build
        if: contains(matrix.build, 'qmake')
        run: |
           mkdir "${{github.workspace}}/qmake-build"
           cd "${{github.workspace}}/qmake-build"
           qmake .. CONFIG+=${{env.BUILD_TYPE}}
           make
